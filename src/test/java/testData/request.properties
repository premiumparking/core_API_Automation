# All

getLoginInfo = {"operationName":"getLoginInfo","variables":{"login":"2485795654"},"query":"query getLoginInfo($login: String!) {\n  login_info(login: $login) {\n    login_type\n    login_value\n    password_required\n    __typename\n  }\n}\n"}
sendPhoneVerificationCode = {"operationName":"sendPhoneVerificationCode","variables":{"phone":"2485795654"},"query":"mutation sendPhoneVerificationCode($phone: String!) {\n  send_phone_verification_code(phone: $phone) {\n    next_resend_delay\n    phone\n    __typename\n  }\n}\n"}
verifyPhoneNumber = {"operationName":"verifyPhoneNumber","variables":{"phone":"2485795654","code":"1234","generate_jwt_token":false},"query":"mutation verifyPhoneNumber($phone: String!, $code: String!, $generate_jwt_token: Boolean!) {\n  verify_phone_number(phone: $phone, code: $code, generate_jwt_token: $generate_jwt_token) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
currentProfile = {"operationName":"currentProfile","variables":{},"query":"query currentProfile {\n  me {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
getLocationPageData = {"operationName":"getLocationPageData","variables":{"name":"P101","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    remove_guest_checkout_option\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    hotels {\n      id\n      name\n      logo\n      checkout_time\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  button_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
personalVehicles={"operationName":"personalVehicles","variables":{},"query":"query personalVehicles {\n  me {\n    id\n    vehicles(archived: false, kind: INDIVIDUAL, sort_by: {updated_at: DESC}) {\n      ...vehicle\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
getLocationRates={"operationName":"getLocationRates","variables":{"name":"P101","timestamp":1712138175},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
getStates={"operationName":"getStates","variables":{},"query":"query getStates {\n  states {\n    ...stateInfo\n    __typename\n  }\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
getParkingCostByRate={"operationName":"getParkingCostByRate","variables":{"isCheckout":true,"parking_time_type":"SESSION","location_id":50,"payment_method_type":"CARD","source":"TEXTPAY","apply_wallet_credit":true,"parking_lots":[{"vehicles":[{"id":1976769}]}],"partner_product_prices":[],"peek_travel_products":[],"partner_product_kinds":["PARTNER_SALE","PEEK_TRAVEL"],"parking_time_rate_id":48898},"query":"query getParkingCostByRate($parking_time_rate_id: Int!, $parking_time_type: ParkingEntity!, $location_id: Int, $promo_code: String, $apply_wallet_credit: Boolean!, $starts_at: Float, $expires_at: Float, $payment_method_type: PaymentMethodEntity, $source: Source!, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_products: [PeekTravelProductInput!], $isCheckout: Boolean = false, $parking_lots: [ParkingLotInput!], $partner_product_kinds: [PartnerProductKind!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  parking_cost_by_rate(parking_time_rate_id: $parking_time_rate_id, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, starts_at: $starts_at, expires_at: $expires_at, source: $source, payment_method_type: $payment_method_type, partner_product_prices: $partner_product_prices, peek_travel_products: $peek_travel_products, parking_lots: $parking_lots, partner_product_kinds: $partner_product_kinds, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parkingCost\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  discount_amount\n  discount_percentage\n  purchase_amount\n  total_without_discount\n  minutes\n  message\n  parking_expires_at\n  parking_starts_at\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  total @include(if: $isCheckout)\n  wallet_credit_amount @include(if: $isCheckout)\n  available_wallet_balance @include(if: $isCheckout)\n  active_parking @include(if: $isCheckout) {\n    active\n    entity_type\n    order_number_id\n    hotel_id\n    guest_room_number\n    __typename\n  }\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    partner_product_id\n    external_product_id\n    total_amount\n    product_name\n    kind\n    ends_at\n    starts_at\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  kind\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    text\n    durations {\n      id\n      text\n      minutes\n      tickets {\n        id\n        title\n        kind\n        amount\n        amount_percentage\n        min_quantity\n        max_quantity\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getParkingCostByDuration={"operationName":"getParkingCostByDuration","variables":{"isCheckout":false,"parking_time_type":"SESSION","location_id":50,"payment_method_type":"CARD","source":"TEXTPAY","apply_wallet_credit":false,"parking_lots":[{"vehicles":[{"id":1980234}]}],"partner_product_prices":[],"peek_travel_products":[],"partner_product_kinds":["PARTNER_SALE","PEEK_TRAVEL"],"minutes":720},"query":"query getParkingCostByDuration($minutes: Int!, $parking_time_type: ParkingEntity!, $location_id: Int!, $promo_code: String, $apply_wallet_credit: Boolean!, $payment_method_type: PaymentMethodEntity, $source: Source!, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_products: [PeekTravelProductInput!], $isCheckout: Boolean = false, $parking_lots: [ParkingLotInput!], $partner_product_kinds: [PartnerProductKind!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  parking_cost_by_duration(minutes: $minutes, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, source: $source, payment_method_type: $payment_method_type, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, peek_travel_products: $peek_travel_products, parking_lots: $parking_lots, partner_product_kinds: $partner_product_kinds, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parkingCost\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  discount_amount\n  discount_percentage\n  purchase_amount\n  total_without_discount\n  minutes\n  message\n  parking_expires_at\n  parking_starts_at\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  total @include(if: $isCheckout)\n  wallet_credit_amount @include(if: $isCheckout)\n  available_wallet_balance @include(if: $isCheckout)\n  active_parking @include(if: $isCheckout) {\n    active\n    entity_type\n    order_number_id\n    hotel_id\n    guest_room_number\n    __typename\n  }\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    partner_product_id\n    external_product_id\n    total_amount\n    product_name\n    kind\n    ends_at\n    starts_at\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  kind\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    text\n    durations {\n      id\n      text\n      minutes\n      tickets {\n        id\n        title\n        kind\n        amount\n        amount_percentage\n        min_quantity\n        max_quantity\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
personalDataForCheckout={"operationName":"personalDataForCheckout","variables":{},"query":"query personalDataForCheckout {\n  me {\n    id\n    phone\n    email\n    first_name\n    last_name\n    payment_methods(archived: false, entity_types: [CARD]) {\n      entity_id\n      name\n      last4\n      __typename\n    }\n    vehicles(archived: false, kind: INDIVIDUAL, sort_by: {updated_at: DESC}) {\n      ...vehicle\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
createParking={"operationName":"createParking","variables":{"minutes":720,"apply_wallet_credit":true,"location_id":50,"parking_time_type":"SESSION","card_id":315683,"save_payment_method":true,"payment_method_type":"CARD","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"id":1980234}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $guest_first_name: String, $guest_last_name: String, $guest_reservation_number: String, $guest_room_number: String, $hotel_id: Int, $folio_charge: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_reservation_number: $guest_reservation_number, guest_room_number: $guest_room_number, hotel_id: $hotel_id, folio_charge: $folio_charge, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
extendParking={"operationName":"extendParking","variables":{"order_number_id":987250,"minutes":720,"apply_wallet_credit":true,"save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","token":"tok_0P65lmOwVONrPVnvPzvUdPLD","partner_product_prices":[]},"query":"mutation extendParking($order_number_id: Int!, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $promo_code: String, $minutes: Int, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  extend_parking(order_number_id: $order_number_id, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, promo_code: $promo_code, source: $source, minutes: $minutes, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, partner_product_prices: $partner_product_prices, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}



#Create Parking
createParking_PromoCode = {"operationName":"createParking","variables":{"minutes":60,"promo_code":"PROMO100","apply_wallet_credit":false,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"CBA","state":"ILLINOIS"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getLocationData = {"operationName":"getLocationPageData","variables":{"name":"P9800","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
createParking_Card = {"operationName":"createParking","variables":{"minutes":240,"apply_wallet_credit":true,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","token":"tok_0MSGHgOwVONrPVnvYQMWOz8F","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"GAB","state":"LOUISIANA"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
#getLocationRates =  {"operationName":"getLocationRates","variables":{"name":"P101","timestamp":1675322601},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
getStates =  {"operationName":"getStates","variables":{},"query":"query getStates {\n  states {\n    ...stateInfo\n    __typename\n  }\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
getState =  {"operationName":"getState","variables":{"enum":"LOUISIANA"},"query":"query getState($enum: String!) {\n  state(enum: $enum) {\n    ...stateInfo\n    __typename\n  }\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}

#TextPay 
verifyPhoneNumber= {"operationName":"verifyPhoneNumber","variables":{"phone":"2485795654","code":"1234","generate_jwt_token":false},"query":"mutation verifyPhoneNumber($phone: String!, $code: String!, $generate_jwt_token: Boolean!) {\n  verify_phone_number(phone: $phone, code: $code, generate_jwt_token: $generate_jwt_token) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
getLocationPageData = {"operationName":"getLocationPageData","variables":{"name":"P1202","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    hotels {\n      id\n      name\n      logo\n      checkout_time\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  button_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
#getLocationRates ={"operationName":"getLocationRates","variables":{"name":"P1202","timestamp":1685081578},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
validateHotelGuest={"operationName":"validateHotelGuest","variables":{"location_id":639,"hotel_id":"3","guest_first_name":"Rama","guest_last_name":"Ravan","guest_room_number":"65498"},"query":"query validateHotelGuest($location_id: Int!, $hotel_id: String!, $guest_first_name: String!, $guest_last_name: String!, $guest_room_number: String!) {\n  validate_hotel_guest(location_id: $location_id, hotel_id: $hotel_id, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_room_number: $guest_room_number) {\n    pms_code\n    guest_list_id\n    guest_id\n    room_nbr\n    first_name\n    last_name\n    checkin_date\n    checkout_date\n    tickets\n    __typename\n  }\n}\n"}
createParking = {"operationName":"createParking","variables":{"minutes":12184,"promo_code":"PPFSTEST","apply_wallet_credit":true,"location_id":639,"parking_time_type":"SESSION","card_id":314872,"save_payment_method":true,"payment_method_type":"FOLIOCHARGE","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"id":1948135}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $guest_first_name: String, $guest_last_name: String, $guest_reservation_number: String, $guest_room_number: String, $hotel_id: Int, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_reservation_number: $guest_reservation_number, guest_room_number: $guest_room_number, hotel_id: $hotel_id, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getConfirmationPageData = {"operationName":"getConfirmationPageData","variables":{"orderNumber":945608},"query":"query getConfirmationPageData($orderNumber: Int!) {\n  me {\n    id\n    parkings(order_number_id: $orderNumber) {\n      expires_at\n      starts_at\n      order_number_id\n      order_total\n      rate_name\n      possession_token {\n        value\n        __typename\n      }\n      last_payment {\n        revenue_amount\n        rate_name\n        __typename\n      }\n      tickets {\n        id\n        confirmation_number\n        product_name\n        logo_url\n        description\n        total_amount\n        __typename\n      }\n      purchase_details {\n        kind\n        title\n        value\n        __typename\n      }\n      location {\n        id\n        kind\n        friendly_name\n        address\n        advertising_message\n        allow_subscriptions\n        promo_code_prompt\n        logo {\n          url\n          __typename\n        }\n        market {\n          tzinfo_name\n          time_zone\n          __typename\n        }\n        __typename\n      }\n      vehicles {\n        ...vehicle\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}

# SPA
spa_signIn={"operationName":"signin","variables":{"generate_jwt_token":false,"source":"WEB","login":"premiumparkingqa@gmail.com","password":"9010030500"},"query":"mutation signin($login: String!, $password: String!, $omniauthProfileInfoId: String) {\n  login(login: $login, password: $password, omniauth_profile_info_id: $omniauthProfileInfoId) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
spa_signOut={"operationName":"logout","variables":{},"query":"mutation logout {\n  logout {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
spa_create_session={"operationName":"createParking","variables":{"minutes":720,"apply_wallet_credit":true,"location_id":50,"parking_time_type":"SESSION","parking_lots":[{"vehicles":[{"state":"DISTRICT_OF_COLUMBIA","license_plate":"U733U"}]}],"save_payment_method":true,"source":"WEB","partner_product_prices":[],"card_id":314000,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
spa_create_reservation={"operationName":"createParking","variables":{"starts_at":1678969800,"expires_at":1679056200,"apply_wallet_credit":true,"location_id":891,"parking_time_type":"RESERVATION","parking_lots":[{"vehicles":[{"state":"ALABAMA","license_plate":"01MUD"}]}],"save_payment_method":false,"source":"WEB","partner_product_prices":[],"card_id":314460,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
spa_create_subscription={"operationName":"createParking","variables":{"parking_time_rate_id":57,"starts_at":1679029200,"payment_method_name":"","apply_wallet_credit":true,"location_id":50,"parking_time_type":"SUBSCRIPTION","parking_lots":[{"vehicles":[{"state":"ALABAMA","license_plate":"A221K"},{"state":"ALABAMA","license_plate":"A22K6"},{"state":"ALABAMA","license_plate":"R059G"}]}],"save_payment_method":true,"source":"WEB","partner_product_prices":[],"card_id":314567,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
