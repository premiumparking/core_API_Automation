# All

getLoginInfo = {"operationName":"getLoginInfo","variables":{"login":"2485795654"},"query":"query getLoginInfo($login: String!) {\n  login_info(login: $login) {\n    login_type\n    login_value\n    password_required\n    __typename\n  }\n}\n"}
sendPhoneVerificationCode = {"operationName":"sendPhoneVerificationCode","variables":{"phone":"2485795654"},"query":"mutation sendPhoneVerificationCode($phone: String!) {\n  send_phone_verification_code(phone: $phone) {\n    next_resend_delay\n    phone\n    __typename\n  }\n}\n"}
verifyPhoneNumber = {"operationName":"verifyPhoneNumber","variables":{"phone":"2485795654","code":"1234","generate_jwt_token":false},"query":"mutation verifyPhoneNumber($phone: String!, $code: String!, $generate_jwt_token: Boolean!) {\n  verify_phone_number(phone: $phone, code: $code, generate_jwt_token: $generate_jwt_token) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
currentProfile = {"operationName":"currentProfile","variables":{},"query":"query currentProfile {\n  me {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
getLocationPageData = {"operationName":"getLocationPageData","variables":{"name":"P101","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    remove_guest_checkout_option\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    hotels {\n      id\n      name\n      logo\n      checkout_time\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  button_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
personalVehicles={"operationName":"personalVehicles","variables":{},"query":"query personalVehicles {\n  me {\n    id\n    vehicles(archived: false, kind: INDIVIDUAL, sort_by: {updated_at: DESC}) {\n      ...vehicle\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
getLocationRates={"operationName":"getLocationRates","variables":{"name":"P101","timestamp":1712138175},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
getStates={"operationName":"getStates","variables":{},"query":"query getStates {\n  states {\n    ...stateInfo\n    __typename\n  }\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
getParkingCostByRate={"operationName":"getParkingCostByRate","variables":{"isCheckout":true,"parking_time_type":"SESSION","location_id":50,"payment_method_type":"CARD","source":"TEXTPAY","apply_wallet_credit":true,"parking_lots":[{"vehicles":[{"id":1976769}]}],"partner_product_prices":[],"peek_travel_products":[],"partner_product_kinds":["PARTNER_SALE","PEEK_TRAVEL"],"parking_time_rate_id":48898},"query":"query getParkingCostByRate($parking_time_rate_id: Int!, $parking_time_type: ParkingEntity!, $location_id: Int, $promo_code: String, $apply_wallet_credit: Boolean!, $starts_at: Float, $expires_at: Float, $payment_method_type: PaymentMethodEntity, $source: Source!, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_products: [PeekTravelProductInput!], $isCheckout: Boolean = false, $parking_lots: [ParkingLotInput!], $partner_product_kinds: [PartnerProductKind!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  parking_cost_by_rate(parking_time_rate_id: $parking_time_rate_id, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, starts_at: $starts_at, expires_at: $expires_at, source: $source, payment_method_type: $payment_method_type, partner_product_prices: $partner_product_prices, peek_travel_products: $peek_travel_products, parking_lots: $parking_lots, partner_product_kinds: $partner_product_kinds, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parkingCost\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  discount_amount\n  discount_percentage\n  purchase_amount\n  total_without_discount\n  minutes\n  message\n  parking_expires_at\n  parking_starts_at\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  total @include(if: $isCheckout)\n  wallet_credit_amount @include(if: $isCheckout)\n  available_wallet_balance @include(if: $isCheckout)\n  active_parking @include(if: $isCheckout) {\n    active\n    entity_type\n    order_number_id\n    hotel_id\n    guest_room_number\n    __typename\n  }\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    partner_product_id\n    external_product_id\n    total_amount\n    product_name\n    kind\n    ends_at\n    starts_at\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  kind\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    text\n    durations {\n      id\n      text\n      minutes\n      tickets {\n        id\n        title\n        kind\n        amount\n        amount_percentage\n        min_quantity\n        max_quantity\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getParkingCostByDuration={"operationName":"getParkingCostByDuration","variables":{"isCheckout":false,"parking_time_type":"SESSION","location_id":50,"payment_method_type":"CARD","source":"TEXTPAY","apply_wallet_credit":false,"parking_lots":[{"vehicles":[{"id":1980234}]}],"partner_product_prices":[],"peek_travel_products":[],"partner_product_kinds":["PARTNER_SALE","PEEK_TRAVEL"],"minutes":720},"query":"query getParkingCostByDuration($minutes: Int!, $parking_time_type: ParkingEntity!, $location_id: Int!, $promo_code: String, $apply_wallet_credit: Boolean!, $payment_method_type: PaymentMethodEntity, $source: Source!, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_products: [PeekTravelProductInput!], $isCheckout: Boolean = false, $parking_lots: [ParkingLotInput!], $partner_product_kinds: [PartnerProductKind!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  parking_cost_by_duration(minutes: $minutes, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, source: $source, payment_method_type: $payment_method_type, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, peek_travel_products: $peek_travel_products, parking_lots: $parking_lots, partner_product_kinds: $partner_product_kinds, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parkingCost\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  discount_amount\n  discount_percentage\n  purchase_amount\n  total_without_discount\n  minutes\n  message\n  parking_expires_at\n  parking_starts_at\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  total @include(if: $isCheckout)\n  wallet_credit_amount @include(if: $isCheckout)\n  available_wallet_balance @include(if: $isCheckout)\n  active_parking @include(if: $isCheckout) {\n    active\n    entity_type\n    order_number_id\n    hotel_id\n    guest_room_number\n    __typename\n  }\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    partner_product_id\n    external_product_id\n    total_amount\n    product_name\n    kind\n    ends_at\n    starts_at\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  kind\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    text\n    durations {\n      id\n      text\n      minutes\n      tickets {\n        id\n        title\n        kind\n        amount\n        amount_percentage\n        min_quantity\n        max_quantity\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
personalDataForCheckout={"operationName":"personalDataForCheckout","variables":{},"query":"query personalDataForCheckout {\n  me {\n    id\n    phone\n    email\n    first_name\n    last_name\n    payment_methods(archived: false, entity_types: [CARD]) {\n      entity_id\n      name\n      last4\n      __typename\n    }\n    vehicles(archived: false, kind: INDIVIDUAL, sort_by: {updated_at: DESC}) {\n      ...vehicle\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
createParking={"operationName":"createParking","variables":{"minutes":720,"apply_wallet_credit":true,"location_id":50,"parking_time_type":"SESSION","card_id":315683,"save_payment_method":true,"payment_method_type":"CARD","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"id":1980234}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $guest_first_name: String, $guest_last_name: String, $guest_reservation_number: String, $guest_room_number: String, $hotel_id: Int, $folio_charge: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!], $validation_parking_expires_at: Float, $entity_id: Float, $parking_type: String) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_reservation_number: $guest_reservation_number, guest_room_number: $guest_room_number, hotel_id: $hotel_id, folio_charge: $folio_charge, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions, validation_parking_expires_at: $validation_parking_expires_at, entity_id: $entity_id, parking_type: $parking_type) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
extendParking={"operationName":"extendParking","variables":{"order_number_id":987250,"minutes":720,"apply_wallet_credit":true,"save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","token":"tok_0P65lmOwVONrPVnvPzvUdPLD","partner_product_prices":[]},"query":"mutation extendParking($order_number_id: Int!, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $promo_code: String, $minutes: Int, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $partner_product_prices: [PartnerProductPriceArgument!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  extend_parking(order_number_id: $order_number_id, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, promo_code: $promo_code, source: $source, minutes: $minutes, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, partner_product_prices: $partner_product_prices, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}


# SPA
signin={"operationName":"signin","variables":{"generate_jwt_token":false,"source":"WEB","login":"premiuparkingqa@gmail.com","password":"9010030500"},"query":"mutation signin($login: String!, $password: String!, $omniauthProfileInfoId: String) {\n  login(login: $login, password: $password, omniauth_profile_info_id: $omniauthProfileInfoId) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
getFooterData = {"operationName":"getFooterData","variables":{},"query":"query getFooterData {\n  markets(archived: false, top_market: true, visible: true, sort_by: {name: ASC}) {\n    ...marketMainInfo\n    __typename\n  }\n  static_page_groups(archived: false, published: true, sort_by: {position: ASC}) {\n    title\n    slug\n    static_pages(archived: false, published: true, show_in_footer: true) {\n      slug\n      navigation {\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment marketMainInfo on Market {\n  id\n  slug\n  name\n  __typename\n}\n"}
getMarketsListData = {"operationName":"getMarketsListData","variables":{},"query":"query getMarketsListData {\n  markets(archived: false, visible: true, sort_by: {name: ASC}) {\n    id\n    name\n    latitude\n    longitude\n    map_zoom\n    slug\n    __typename\n  }\n}\n"}
currentProfile = {"operationName":"currentProfile","variables":{},"query":"query currentProfile {\n  me {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
autocompleteSearchForAllCities = {"operationName":"autocompleteSearchForAllCities","variables":{"withStreetAddress":true,"query":"10"},"query":"query autocompleteSearchForAllCities($onlyReservedLocations: Boolean, $query: String!, $withStreetAddress: Boolean!) {\n  autocomplete_search(only_reserved_locations: $onlyReservedLocations, query: $query, with_street_address: $withStreetAddress) {\n    ...searchComplete\n    __typename\n  }\n}\n\nfragment searchComplete on AutocompleteSearchItem {\n  description\n  id\n  latitude\n  longitude\n  name\n  slug\n  type\n  __typename\n}\n"}
getLocation = {"operationName":"getLocation","variables":{"slug":"P101"},"query":"query getLocation($slug: String!) {\n  location(slug: $slug, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    cruise\n    dead_rate\n    latitude\n    longitude\n    reservation_instructions\n    allows_durations\n    allows_reservations\n    message\n    meta_description\n    meta_title\n    overloaded\n    show_monthly_parking_box\n    monthly_parking_url\n    parking_for_trucking_fleets\n    min_multiple_spaces_count\n    kind\n    messageMultiply: message_multiply\n    payToParkNowButtonText: pay_to_park_now_button_text\n    parkHereButtonText: park_here_button_text\n    ...locationAddress\n    ...mazemapData\n    logo {\n      url\n      __typename\n    }\n    market {\n      id\n      slug\n      tzinfo_name\n      time_zone\n      __typename\n    }\n    nearby_venues(archived: false, limit: 5) {\n      id\n      name\n      slug\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    recurring_rates(archived: false, visible: true) {\n      id\n      name\n      access_hours_info\n      pre_tax_price\n      kind\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    overlay_points {\n      ...LocationOverlayPoint\n      __typename\n    }\n    photo {\n      lazy {\n        url\n        __typename\n      }\n      medium {\n        url\n        __typename\n      }\n      __typename\n    }\n    additional_photos {\n      lazy {\n        url\n        __typename\n      }\n      medium {\n        url\n        __typename\n      }\n      __typename\n    }\n    spaces {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment locationAddress on Location {\n  friendly_name\n  address\n  city\n  state\n  zip\n  property_name\n  __typename\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment LocationOverlayPoint on OverlayPoint {\n  id\n  latitude\n  longitude\n  __typename\n}\n\nfragment mazemapData on Location {\n  mazemap_id\n  mazemap_token\n  mazemap_zoom\n  mazemap_bearing\n  __typename\n}\n"}
getLocationCurrentData={"operationName":"getLocationCurrentData","variables":{"slug":"P101","timestamp":1714541296},"query":"query getLocationCurrentData($slug: String!, $timestamp: Float) {\n  location(slug: $slug, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n      ...LocationRate\n      __typename\n    }\n    blackouts(sessions_blocked: true, active_at_from: $timestamp, active_at_until: $timestamp) {\n      sessions_blocked\n      message\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  id\n  expires_at\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
getVehicleEnums={"operationName":"getVehicleEnums","variables":{},"query":"query getVehicleEnums {\\n  states: __type(name: \\"State\\") {\\n    enumValues {\\n      name\\n      description\\n      __typename\\n    }\\n    __typename\\n  }\\n}\\n"}
getMarketPageData ={"operationName":"getMarketPageData","variables":{"slug":"new-orleans","venuesInGroupsLimit":8,"popularVenuesLimit":6},"query":"query getMarketPageData($slug: String!, $venuesInGroupsLimit: Int, $popularVenuesLimit: Int) {\n  market(slug: $slug, archived: false) {\n    name\n    id\n    latitude\n    longitude\n    slug\n    description\n    meta_description\n    meta_title\n    map_zoom\n    venues(archived: false, limit: $popularVenuesLimit, sort_by: {position: ASC}) {\n      address\n      id\n      name\n      photo {\n        url\n        medium {\n          url\n          __typename\n        }\n        lazy {\n          url\n          __typename\n        }\n        __typename\n      }\n      slug\n      __typename\n    }\n    photo {\n      lazy {\n        url\n        __typename\n      }\n      medium {\n        url\n        __typename\n      }\n      __typename\n    }\n    venue_groups(sort_by: {position: ASC}) {\n      id\n      photo {\n        url\n        __typename\n      }\n      title\n      venues(archived: false, limit: $venuesInGroupsLimit, sort_by: {position_in_group: ASC}) {\n        address\n        description\n        id\n        name\n        slug\n        photo {\n          lazy {\n            url\n            __typename\n          }\n          medium {\n            url\n            __typename\n          }\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
getVenueData = {"operationName":"getVenueData","variables":{"slug":"new-orleans","venueSlug":"harrahs-new-orleans-casino","nearbyLocationsLimit":6},"query":"query getVenueData($slug: String!, $venueSlug: String!, $nearbyLocationsLimit: Int) {\n  market(slug: $slug, archived: false) {\n    id\n    name\n    slug\n    tzinfo_name\n    map_zoom\n    venue(slug: $venueSlug, market_slug: $slug, archived: false) {\n      id\n      name\n      longitude\n      latitude\n      cruise\n      description\n      address\n      slug\n      meta_description\n      meta_title\n      photo {\n        lazy {\n          url\n          __typename\n        }\n        medium {\n          url\n          __typename\n        }\n        url\n        __typename\n      }\n      nearby_locations(archived: false, competitor: false, limit: $nearbyLocationsLimit, non_parking: false) {\n        id\n        address\n        distance\n        friendly_name\n        name\n        photo {\n          lazy {\n            url\n            __typename\n          }\n          medium {\n            url\n            __typename\n          }\n          url\n          __typename\n        }\n        color_theme {\n          ...LocationColorTheme\n          __typename\n        }\n        __typename\n      }\n      kind\n      logo {\n        url\n        __typename\n      }\n      color_theme {\n        id\n        name\n        content_color\n        text_color\n        button_color\n        button_text_color\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n"}
getUpcomingEvents = {"operationName":"getUpcomingEvents","variables":{"marketSlug":"new-orleans","venueSlug":"harrahs-new-orleans-casino","limit":12,"startsAtFrom":1714539600},"query":"query getUpcomingEvents($marketSlug: String!, $venueSlug: String!, $limit: Int, $startsAtFrom: Float, $startsAtUntil: Float) {\n  market(slug: $marketSlug, archived: false) {\n    id\n    name\n    slug\n    venue(slug: $venueSlug, market_slug: $marketSlug, archived: false) {\n      id\n      name\n      slug\n      venue_events(archived: false, limit: $limit, starts_at_from: $startsAtFrom, starts_at_until: $startsAtUntil, status: UPCOMING_VISIBLE) {\n        id\n        name\n        starts_at\n        ends_at\n        venue_longitude\n        venue_latitude\n        venue_address\n        cruise\n        description\n        slug\n        parking_expires_at\n        parking_starts_at\n        visibility_at\n        go_live_at\n        photo {\n          lazy {\n            url\n            __typename\n          }\n          medium {\n            url\n            __typename\n          }\n          url\n          __typename\n        }\n        nearby_locations(archived: false, competitor: false, limit: $limit, non_parking: false) {\n          id\n          friendly_name\n          cruise\n          __typename\n        }\n        featured_location {\n          id\n          cruise\n          friendly_name\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
getFeaturesForSearchFilter={"operationName":"getFeaturesForSearchFilter","variables":{},"query":"query getFeaturesForSearchFilter {\n  features(archived: false, available_to_filter_on_map: true) {\n    icon {\n      url\n      __typename\n    }\n    id\n    title\n    __typename\n  }\n}\n"}
getSearchPageData={"operationName":"getSearchPageData","variables":{"mapZoom":16,"neLatitude":29.950866146641417,"neLongitude":-90.05736578843924,"swLatitude":29.948226035834494,"swLongitude":-90.07162441156234,"name":"Harrah's New Orleans Casino","rateType":"HOURLY","features":[],"startsAt":1714554660,"expiresAt":1714558260,"longitude":-90.0644951,"latitude":29.9495461,"exceptCruise":true},"query":"query getSearchPageData($features: [Int!], $latitude: Float!, $longitude: Float!, $swLatitude: Float!, $swLongitude: Float!, $neLongitude: Float!, $neLatitude: Float!, $rateType: SuitableRate!, $startsAt: Float!, $expiresAt: Float!, $exceptCruise: Boolean!, $allowsReservations: Boolean, $allowsSubscriptions: Boolean) {\n  locations(archived: false, with_parking_price: {rate_type: $rateType, starts_at: $startsAt, expires_at: $expiresAt, except_cruise: $exceptCruise}, competitor: false, non_parking: false, feature_ids: $features, distance_to_coordinates: {latitude: $latitude, longitude: $longitude}, boundary_coordinates: {sw_latitude: $swLatitude, sw_longitude: $swLongitude, ne_longitude: $neLongitude, ne_latitude: $neLatitude}, allows_reservations: $allowsReservations, allows_subscriptions: $allowsSubscriptions, sort_by: {name: ASC}) {\n    id\n    address\n    latitude\n    longitude\n    distance\n    friendly_name\n    market {\n      tzinfo_name\n      __typename\n    }\n    overloaded\n    show_monthly_parking_box\n    monthly_parking_url\n    allows_durations\n    parking_cost {\n      event_starts_at\n      event_expires_at\n      minutes\n      rate_amount\n      rate_id\n      rate_name\n      rate_type\n      duration_text\n      __typename\n    }\n    photo {\n      lazy {\n        url\n        __typename\n      }\n      medium {\n        url\n        __typename\n      }\n      __typename\n    }\n    features: location_features {\n      id\n      icon {\n        url\n        __typename\n      }\n      title\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    overlay_points {\n      ...LocationOverlayPoint\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment LocationOverlayPoint on OverlayPoint {\n  id\n  latitude\n  longitude\n  __typename\n}\n"}
getLocationFeatures = {"operationName":"getLocationFeatures","variables":{"name":"P9996"},"query":"query getLocationFeatures($name: String!) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      __typename\n    }\n    __typename\n  }\n}\n"}
getParkingCostByTime = {"operationName":"getParkingCostByTime","variables":{"parking_time_type":"RESERVATION","location_id":50,"apply_wallet_credit":true,"payment_method_type":"CARD","source":"WEB","partner_product_prices":[],"parking_lots":[{"vehicles":[{"state":"ILLINOIS","license_plate":"RRRR"}]}],"starts_at":1714706040,"expires_at":1714792440},"query":"query getParkingCostByTime($starts_at: Float!, $expires_at: Float!, $parking_time_type: ParkingEntity!, $location_id: Int!, $promo_code: String, $apply_wallet_credit: Boolean!, $payment_method_type: PaymentMethodEntity, $rate_group_id: Int, $source: Source!, $partner_product_prices: [PartnerProductPriceArgument!], $parking_lots: [ParkingLotInput!]) {\n  parking_cost_by_time(starts_at: $starts_at, expires_at: $expires_at, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, source: $source, payment_method_type: $payment_method_type, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, partner_product_kinds: [PARTNER_SALE], parking_lots: $parking_lots) {\n    ...parkingCost\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  cc_processing_fee_status\n  cc_processing_fee\n  vehicle_count\n  active_parking {\n    active\n    entity_type\n    order_number_id\n    __typename\n  }\n  available_wallet_balance\n  discount_amount\n  discount_percentage\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  total\n  wallet_credit_amount\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  ...mainParkingCostInfo\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    product_name\n    total_amount\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mainParkingCostInfo on ParkingCost {\n  message\n  minutes\n  parking_expires_at\n  parking_starts_at\n  purchase_amount\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    durations {\n      tickets {\n        id\n        kind\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getParkingCostByRate = {"operationName":"getParkingCostByRate","variables":{"parking_time_type":"SUBSCRIPTION","location_id":50,"apply_wallet_credit":true,"payment_method_type":"CARD","source":"WEB","partner_product_prices":[],"parking_lots":[{"vehicles":[{}]}],"parking_time_rate_id":678,"starts_at":1714626000},"query":"query getParkingCostByRate($parking_time_rate_id: Int!, $parking_time_type: ParkingEntity!, $location_id: Int, $promo_code: String, $apply_wallet_credit: Boolean!, $starts_at: Float, $payment_method_type: PaymentMethodEntity, $source: Source!, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $parking_lots: [ParkingLotInput!]) {\n  parking_cost_by_rate(parking_time_rate_id: $parking_time_rate_id, parking_time_type: $parking_time_type, location_id: $location_id, promo_code: $promo_code, apply_wallet_credit: $apply_wallet_credit, starts_at: $starts_at, source: $source, payment_method_type: $payment_method_type, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, partner_product_kinds: [PARTNER_SALE], parking_lots: $parking_lots) {\n    ...parkingCost\n    floor_space {\n      ...floorSpace\n      __typename\n    }\n    restriction_notes\n    __typename\n  }\n}\n\nfragment parkingCost on ParkingCost {\n  cc_processing_fee_status\n  cc_processing_fee\n  vehicle_count\n  active_parking {\n    active\n    entity_type\n    order_number_id\n    __typename\n  }\n  available_wallet_balance\n  discount_amount\n  discount_percentage\n  promo_code\n  promo_code_available\n  show_remaining_usage\n  remaining_usage_count\n  rate_name\n  rate_details_message\n  total\n  wallet_credit_amount\n  purchase_details {\n    kind\n    title\n    value\n    __typename\n  }\n  promotion {\n    app_link\n    message\n    __typename\n  }\n  ...mainParkingCostInfo\n  accessible_partner_products {\n    ...partnerProduct\n    __typename\n  }\n  tickets {\n    product_name\n    total_amount\n    prices {\n      kind\n      quantity\n      amount\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mainParkingCostInfo on ParkingCost {\n  message\n  minutes\n  parking_expires_at\n  parking_starts_at\n  purchase_amount\n  __typename\n}\n\nfragment partnerProduct on AccessiblePartnerProduct {\n  id\n  name\n  banner_url\n  max_quantity\n  min_amount\n  min_amount_percentage\n  subtitle\n  sub_description\n  redemption_instructions_html\n  available_start_times {\n    durations {\n      tickets {\n        id\n        kind\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment floorSpace on FloorSpace {\n  title\n  id\n  mazemap_poi_id\n  photo {\n    medium {\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
sendResetPasswordNotification = {"operationName":"sendResetPasswordNotification","variables":{"login":"premiuparkingqa@gmail.com"},"query":"mutation sendResetPasswordNotification($login: String!) {\n  send_reset_password_notification(login: $login) {\n    sending_service\n    __typename\n  }\n}\n"}
resetPassword = {"operationName":"resetPassword","variables":{"generate_jwt_token":false,"new_password":"kruthi@01","token":"QL1-moUDzHH94eUnuWbt"},"query":"mutation resetPassword($new_password: String!, $token: String!, $generate_jwt_token: Boolean!) {\n  reset_password(new_password: $new_password, token: $token, generate_jwt_token: $generate_jwt_token) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
getStaticPageData = {"operationName":"getStaticPageData","variables":{"pageSlug":"glideparcs"},"query":"query getStaticPageData($pageSlug: String!) {\n  static_page(archived: false, slug: $pageSlug) {\n    meta_title\n    meta_description\n    navigation {\n      title\n      __typename\n    }\n    static_page_group {\n      slug\n      static_pages(archived: false, published: true, show_in_header: true) {\n        slug\n        navigation {\n          icon\n          title\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    sections {\n      max_width\n      padding\n      title {\n        text\n        color\n        __typename\n      }\n      background {\n        color\n        image {\n          lazy {\n            url\n            __typename\n          }\n          large {\n            url\n            __typename\n          }\n          social {\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      columns {\n        position\n        text_align\n        video {\n          identifier\n          link\n          source\n          __typename\n        }\n        title {\n          text\n          color\n          size\n          __typename\n        }\n        description {\n          text\n          color\n          tag\n          size\n          __typename\n        }\n        image {\n          lazy {\n            url\n            __typename\n          }\n          large {\n            url\n            __typename\n          }\n          url\n          description\n          description_color\n          image_width\n          image_height\n          image_max_width\n          image_max_height\n          image_position\n          image_align\n          __typename\n        }\n        action {\n          kind\n          link\n          title\n          color\n          __typename\n        }\n        linkedin_link\n        social_email\n        twitter_link\n        phone\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
logout = {"operationName":"logout","variables":{},"query":"mutation logout {\n  logout {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
autocompleteSearchByCoordinates = {"operationName":"autocompleteSearchByCoordinates","variables":{"withStreetAddress":true,"query":"new","latitude":17.4366217,"longitude":78.3728344,"radius":30000},"query":"query autocompleteSearchByCoordinates($onlyReservedLocations: Boolean, $query: String!, $withStreetAddress: Boolean!, $latitude: Float!, $longitude: Float!, $radius: Float!) {\n  autocomplete_search(only_reserved_locations: $onlyReservedLocations, query: $query, with_street_address: $withStreetAddress, coordinates: {latitude: $latitude, longitude: $longitude, radius: $radius}) {\n    ...searchComplete\n    __typename\n  }\n}\n\nfragment searchComplete on AutocompleteSearchItem {\n  description\n  id\n  latitude\n  longitude\n  name\n  slug\n  type\n  __typename\n}\n"}
getAllMarkets={"operationName":"getAllMarkets","variables":{},"query":"query getAllMarkets {\n  markets(archived: false, visible: true, sort_by: {name: ASC}) {\n    ...marketMainInfo\n    photo {\n      medium {\n        url\n        __typename\n      }\n      lazy {\n        url\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment marketMainInfo on Market {\n  id\n  slug\n  name\n  __typename\n}\n"}
getCheckoutPageData={"operationName":"getCheckoutPageData","variables":{"slug":"P101","timestamp":1714988328},"query":"query getCheckoutPageData($slug: String!, $timestamp: Float) {\n  location(slug: $slug, non_parking: false, archived: false, competitor: false) {\n    id\n    allow_rate_groups_for_parking\n    latitude\n    longitude\n    reservation_instructions\n    subscription_instructions\n    session_terms_of_purchase_link\n    reservation_terms_of_purchase_link\n    subscription_terms_of_purchase_link\n    kind\n    demo\n    promo_code_prompt\n    promo_code_purchase_required\n    license_plate_purchase_required\n    vehicleInfoHint: vehicle_information_hint\n    ...locationAddress\n    ...mazemapData\n    logo {\n      url\n      __typename\n    }\n    market {\n      id\n      slug\n      tzinfo_name\n      time_zone\n      __typename\n    }\n    overlay_points {\n      ...LocationOverlayPoint\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    photo {\n      lazy {\n        url\n        __typename\n      }\n      medium {\n        url\n        __typename\n      }\n      __typename\n    }\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        id\n        rate_group_title\n        rate_group_id\n        rate_group_sort_index\n        __typename\n      }\n      __typename\n    }\n    rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n      id\n      rate_group_title\n      rate_group_id\n      rate_group_sort_index\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment locationAddress on Location {\n  friendly_name\n  address\n  city\n  state\n  zip\n  property_name\n  __typename\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment LocationOverlayPoint on OverlayPoint {\n  id\n  latitude\n  longitude\n  __typename\n}\n\nfragment mazemapData on Location {\n  mazemap_id\n  mazemap_token\n  mazemap_zoom\n  mazemap_bearing\n  __typename\n}\n"}
getEvent={"operationName":"getEvent","variables":{"slug":"test-future-event","venueSlug":"caesars-superdome","marketSlug":"new-orleans"},"query":"query getEvent($slug: String!, $venueSlug: String!, $marketSlug: String!) {\n  venue_event(slug: $slug, venue_slug: $venueSlug, market_slug: $marketSlug, archived: false) {\n    id\n    name\n    description\n    parking_starts_at\n    parking_expires_at\n    starts_at\n    ends_at\n    __typename\n  }\n}\n"}
getEventData={"operationName":"getEventData","variables":{"slug":"new-orleans","venueSlug":"caesars-superdome","eventSlug":"test-future-event","nearbyLocationsLimit":6},"query":"query getEventData($slug: String!, $venueSlug: String!, $eventSlug: String!, $nearbyLocationsLimit: Int) {\n  market(slug: $slug, archived: false) {\n    id\n    name\n    slug\n    tzinfo_name\n    map_zoom\n    venue(slug: $venueSlug, archived: false) {\n      id\n      name\n      slug\n      venue_event(slug: $eventSlug, venue_slug: $venueSlug, market_slug: $slug, archived: false, status: UPCOMING_VISIBLE) {\n        id\n        name\n        slug\n        description\n        venue_address\n        starts_at\n        ends_at\n        parking_starts_at\n        parking_expires_at\n        visibility_at\n        go_live_at\n        venue_latitude\n        venue_longitude\n        meta_description\n        meta_title\n        photo {\n          lazy {\n            url\n            __typename\n          }\n          medium {\n            url\n            __typename\n          }\n          url\n          __typename\n        }\n        nearby_locations(archived: false, non_parking: false, competitor: false, limit: $nearbyLocationsLimit, cruise: false) {\n          id\n          address\n          distance\n          friendly_name\n          sold_out_message\n          name\n          photo {\n            url\n            lazy {\n              url\n              __typename\n            }\n            medium {\n              url\n              __typename\n            }\n            __typename\n          }\n          color_theme {\n            ...LocationColorTheme\n            __typename\n          }\n          venue_event_parking(venue_event_slug: $eventSlug, archived: false, sort_by: {distance: ASC}) {\n            id\n            distance\n            web_amount\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n"}
signup={"operationName":"signup","variables":{"generate_jwt_token":false,"source":"WEB","login":"auto_1818181@test.com","password":"auto_1818181@test.com","recaptcha_token":"03AFcWeA6ANQMMJn4zysis8ZVgULYGsDWCgoIU8GWfYbN3ST_L4JWDBYk86ceKwRN3BrqahcryYFkTNEz3jcm6D_Wu7DnmdA1nBlw-uAr32sFaej-TcuciDqm0w9sfOoARCWoL4m4nmIFyhPKE4PItw-ypouX6_3L8xjsa7fBltfs0DwqVtPNspd6e4eEERGxyQkSxr5gJVccnIuv5tEzEMqG73tT__gr52XO-VfM6myCYYkVX9VvzMfL9G3aXsPE_ge6ppERJGUs0OvvfRgg-Y-PIhzQPC0uQfkf2iB50qHQf5tRwy-9IDA0JUVa9eGhTnevXU6b79F22ksCHq1332g5m-0AsxrzlkXrgRx7pl80ySXPGQM58d-YUMz3OAS0n4HgKDkr2Jkh_FQ6TQ8KsbZZ2UkCvjRogMsR1TQfl5sWhJxUgwSoPb-GQn7a0ZciG5XfsPVWHXl1tKRNArlsbVxWwi_MID1cDaFkKOhcvK9QZADSFhP8FH4oLatUx-43b6fSMgp_Ct0KuoZAgPs6008Qir73QdEbcjSlUValDswGfPm9Vak7KJJjbywTTxmXTeRH2Sa1x6HLFb24EEflu0hIJ9zb_mKSiPiNBjCxcCCy6duAwmy3EBsZy_V0wraXJBZe7pQEDcDINEvJhBKr7ZGnPzmrCnlVht3ouJyBNfAR4QApWmOySi78"},"query":"mutation signup($login: String!, $password: String!, $recaptcha_token: String!, $generate_jwt_token: Boolean!, $source: Source!) {\n  register(login: $login, password: $password, recaptcha_token: $recaptcha_token, generate_jwt_token: $generate_jwt_token, source: $source) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
getConfirmationPageData={"operationName":"getConfirmationPageData","variables":{"order_number_id":991369},"query":"query getConfirmationPageData($order_number_id: Int!) {\n  me {\n    id\n    email\n    parkings(order_number_id: $order_number_id) {\n      entity_id\n      order_number_id\n      entity_type\n      expires_at\n      receiver_email\n      last_payment {\n        revenue_amount\n        rate_name\n        __typename\n      }\n      tickets {\n        confirmation_number\n        description\n        id\n        logo_url\n        partner_product_id\n        product_name\n        total_amount\n        __typename\n      }\n      location {\n        reservation_instructions\n        subscription_instructions\n        longitude\n        latitude\n        kind\n        promo_code_prompt\n        ...locationAddress\n        logo {\n          url\n          __typename\n        }\n        market {\n          tzinfo_name\n          time_zone\n          __typename\n        }\n        color_theme {\n          ...LocationColorTheme\n          __typename\n        }\n        ...mazemapData\n        __typename\n      }\n      floor_space {\n        ...floorSpace\n        __typename\n      }\n      order_total\n      rate_name\n      vehicle_count\n      starts_at\n      vehicles {\n        ...vehicle\n        __typename\n      }\n      parking_lots {\n        id\n        vehicles {\n          ...vehicle\n          __typename\n        }\n        __typename\n      }\n      actions(names: CHANGE_VEHICLE) {\n        name\n        value\n        __typename\n      }\n      restriction_notes\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment locationAddress on Location {\n  friendly_name\n  address\n  city\n  state\n  zip\n  property_name\n  __typename\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment floorSpace on FloorSpace {\n  title\n  id\n  mazemap_poi_id\n  photo {\n    medium {\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n\nfragment mazemapData on Location {\n  mazemap_id\n  mazemap_token\n  mazemap_zoom\n  mazemap_bearing\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
checkCondoNumber ={"operationName":"checkCondoNumber","variables":{"locationId":"876","name":"ppfstest","parkingTimeType":"SESSION","startsAt":1715153661,"expiresAt":1715196861},"query":"query checkCondoNumber($locationId: ID!, $name: String!, $parkingTimeType: ParkingEntity!, $startsAt: Float, $expiresAt: Float) {\n  unit_number(location_id: $locationId, name: $name, parking_time_type: $parkingTimeType, starts_at: $startsAt, expires_at: $expiresAt) {\n    name\n    available_active_parking_count\n    description_text\n    hint_text\n    __typename\n  }\n}\n"}
getLocationFloors = {"operationName":"getLocationFloors","variables":{"slug":"P373"},"query":"query getLocationFloors($slug: String!) {\n  location(slug: $slug) {\n    id\n    floors {\n      title\n      min_price\n      zlevel\n      __typename\n    }\n    __typename\n  }\n}\n"}
getLocationSpaces = {"operationName":"getLocationSpaces","variables":{"slug":"P373","zlevel":1},"query":"query getLocationSpaces($slug: String!, $zlevel: Int) {\n  location(slug: $slug, non_parking: false, archived: false, competitor: false) {\n    id\n    spaces(zlevel: $zlevel) {\n      id\n      occupied\n      pre_tax_price\n      title\n      kind_text\n      description\n      photo {\n        medium {\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
checkLogin={"operationName":"checkLogin","variables":{"login":"09010030500"},"query":"query checkLogin($login: String!) {\n  check_login(login: $login) {\n    available\n    __typename\n  }\n}\n"}
updateProfile={"operationName":"updateProfile","variables":{"first_name":"Venu","last_name":"Thota"},"query":"mutation updateProfile($email: String, $phone: String, $first_name: String, $last_name: String) {\n  update_profile(attributes: {email: $email, phone: $phone, first_name: $first_name, last_name: $last_name}) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  profile_verification_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
getHeaderData={"operationName":"getHeaderData","variables":{},"query":"query getHeaderData {\n  static_page_groups(archived: false, published: true, sort_by: {position: ASC}) {\n    title\n    slug\n    static_pages(archived: false, published: true, limit: 1) {\n      slug\n      navigation {\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
getContactPageData={"operationName":"getContactPageData","variables":{},"query":"query getContactPageData {\n  markets(sort_by: {name: ASC}, archived: false, visible: true) {\n    ...marketMainInfo\n    __typename\n  }\n  locations(archived: false, competitor: false, sort_by: {name: ASC}) {\n    id\n    friendly_name\n    __typename\n  }\n  contact_reasons(archived: false) {\n    id\n    label\n    kind\n    support_articles {\n      freshdesk_article_id\n      id\n      link\n      title\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment marketMainInfo on Market {\n  id\n  slug\n  name\n  __typename\n}\n"}
getMarketVenuesData={"operationName":"getMarketVenuesData","variables":{"marketSlug":"new-orleans","venueGroupIds":[null],"limit":7,"offset":5,"venueSort":{"position":"ASC"}},"query":"query getMarketVenuesData($marketSlug: String!, $venueGroupIds: [Int!], $limit: Int, $offset: Int, $venueSort: VenueSort) {\n  market(slug: $marketSlug, archived: false) {\n    id\n    venues(venue_group_ids: $venueGroupIds, limit: $limit, offset: $offset, archived: false, sort_by: $venueSort) {\n      address\n      description\n      id\n      name\n      slug\n      photo {\n        url\n        lazy {\n          url\n          __typename\n        }\n        medium {\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}
quote={"operationName":"quote","variables":{"city":"P101","name":"Test","email":"venu.t@comakeit.com","phone":"09010030500","address":"Plot no 6524, Road no 12","spaceCount":"500","facilityType":"RETAIL","floors":1,"newConstruction":true,"gates":true,"startDate":"LESS_THAN_THREE_MONTHS"},"query":"mutation quote($name: String, $city: String, $email: String!, $phone: String, $facilityType: Facility, $gates: Boolean, $floors: Int, $newConstruction: Boolean, $startDate: StartDate, $spaceCount: String, $address: String) {\n  create_instant_quote(name: $name, email: $email, city: $city, facility_type: $facilityType, floors: $floors, gates: $gates, new_construction: $newConstruction, phone: $phone, space_count: $spaceCount, start_date: $startDate, address: $address) {\n    email\n    __typename\n  }\n}\n"}
contact={"operationName":"contact","variables":{"firstName":"Venu","lastName":"Thota","email":"venu.t@comakeit.com","phoneNumber":"09010030500","message":"test","market":"Annapolis","location":"A9909","reason":"Receipt"},"query":"mutation contact($email: String!, $firstName: String!, $lastName: String!, $message: String!, $phoneNumber: String, $market: String!, $location: String, $reason: String) {\n  request_contact(email: $email, first_name: $firstName, last_name: $lastName, message: $message, phone: $phoneNumber, market: $market, location: $location, reason: $reason) {\n    email\n    first_name\n    last_name\n    message\n    phone\n    market\n    location\n    reason\n    __typename\n  }\n}\n"}
OrderData={"operationName":"OrderData","variables":{"orderNumber":991369},"query":"query OrderData($orderNumber: Int!) {\n  me {\n    parkings(order_number_id: $orderNumber) {\n      created_at\n      location_id\n      receiver_email\n      vehicles {\n        license_plate\n        id\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"}



#Create Parking
createParking_PromoCode = {"operationName":"createParking","variables":{"minutes":60,"promo_code":"PROMO100","apply_wallet_credit":false,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"CBA","state":"ILLINOIS"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getLocationData = {"operationName":"getLocationPageData","variables":{"name":"P9800","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
createParking_Card = {"operationName":"createParking","variables":{"minutes":240,"apply_wallet_credit":true,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","token":"tok_0MSGHgOwVONrPVnvYQMWOz8F","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"GAB","state":"LOUISIANA"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
#getLocationRates =  {"operationName":"getLocationRates","variables":{"name":"P101","timestamp":1675322601},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
getState =  {"operationName":"getState","variables":{"enum":"LOUISIANA"},"query":"query getState($enum: String!) {\n  state(enum: $enum) {\n    ...stateInfo\n    __typename\n  }\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}

#TextPay 
verifyPhoneNumber= {"operationName":"verifyPhoneNumber","variables":{"phone":"2485795654","code":"1234","generate_jwt_token":false},"query":"mutation verifyPhoneNumber($phone: String!, $code: String!, $generate_jwt_token: Boolean!) {\n  verify_phone_number(phone: $phone, code: $code, generate_jwt_token: $generate_jwt_token) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  auth_token\n  __typename\n}\n"}
getLocationPageData = {"operationName":"getLocationPageData","variables":{"name":"P1202","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    hotels {\n      id\n      name\n      logo\n      checkout_time\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  button_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
#getLocationRates ={"operationName":"getLocationRates","variables":{"name":"P1202","timestamp":1685081578},"query":"query getLocationRates($name: String!, $timestamp: Float) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    rate_groups(sort_by: {position: ASC}, archived: false, with_rates: true) {\n      id\n      sort_index\n      title\n      rates(archived: false, sort_by: {position: ASC}, active_at: $timestamp) {\n        ...LocationRate\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationRate on Rate {\n  active\n  descriptive_title\n  expires_at\n  id\n  kind\n  location_id\n  minutes\n  name\n  pre_tax_price\n  price\n  rate_group_id\n  rate_group_title\n  sort_index\n  tag\n  tax_price\n  visibility\n  visibility_end\n  visibility_start\n  __typename\n}\n"}
validateHotelGuest={"operationName":"validateHotelGuest","variables":{"location_id":639,"hotel_id":"3","guest_first_name":"Rama","guest_last_name":"Ravan","guest_room_number":"65498"},"query":"query validateHotelGuest($location_id: Int!, $hotel_id: String!, $guest_first_name: String!, $guest_last_name: String!, $guest_room_number: String!) {\n  validate_hotel_guest(location_id: $location_id, hotel_id: $hotel_id, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_room_number: $guest_room_number) {\n    pms_code\n    guest_list_id\n    guest_id\n    room_nbr\n    first_name\n    last_name\n    checkin_date\n    checkout_date\n    tickets\n    __typename\n  }\n}\n"}
createParking = {"operationName":"createParking","variables":{"minutes":12184,"promo_code":"PPFSTEST","apply_wallet_credit":true,"location_id":639,"parking_time_type":"SESSION","card_id":314872,"save_payment_method":true,"payment_method_type":"FOLIOCHARGE","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"id":1948135}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $guest_first_name: String, $guest_last_name: String, $guest_reservation_number: String, $guest_room_number: String, $hotel_id: Int, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, guest_first_name: $guest_first_name, guest_last_name: $guest_last_name, guest_reservation_number: $guest_reservation_number, guest_room_number: $guest_room_number, hotel_id: $hotel_id, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getConfirmationPageData = {"operationName":"getConfirmationPageData","variables":{"orderNumber":945608},"query":"query getConfirmationPageData($orderNumber: Int!) {\n  me {\n    id\n    parkings(order_number_id: $orderNumber) {\n      expires_at\n      starts_at\n      order_number_id\n      order_total\n      rate_name\n      possession_token {\n        value\n        __typename\n      }\n      last_payment {\n        revenue_amount\n        rate_name\n        __typename\n      }\n      tickets {\n        id\n        confirmation_number\n        product_name\n        logo_url\n        description\n        total_amount\n        __typename\n      }\n      purchase_details {\n        kind\n        title\n        value\n        __typename\n      }\n      location {\n        id\n        kind\n        friendly_name\n        address\n        advertising_message\n        allow_subscriptions\n        promo_code_prompt\n        logo {\n          url\n          __typename\n        }\n        market {\n          tzinfo_name\n          time_zone\n          __typename\n        }\n        __typename\n      }\n      vehicles {\n        ...vehicle\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  stateInfo: state_info {\n    ...stateInfo\n    __typename\n  }\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}

# SPA
spa_signIn={"operationName":"signin","variables":{"generate_jwt_token":false,"source":"WEB","login":"premiumparkingqa@gmail.com","password":"9010030500"},"query":"mutation signin($login: String!, $password: String!, $omniauthProfileInfoId: String) {\n  login(login: $login, password: $password, omniauth_profile_info_id: $omniauthProfileInfoId) {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
spa_signOut={"operationName":"logout","variables":{},"query":"mutation logout {\n  logout {\n    ...profile\n    __typename\n  }\n}\n\nfragment profile on CurrentProfile {\n  id\n  email\n  phone\n  first_name\n  last_name\n  auth_token\n  phone_confirmation_required\n  password_reset_token\n  payment_methods(archived: false, entity_types: [CARD, ACH]) {\n    entity_uid\n    entity_id\n    entity_type\n    name\n    last4\n    __typename\n  }\n  vehicles(archived: false, kind: INDIVIDUAL, sort_by: {created_at: DESC}) {\n    ...vehicle\n    __typename\n  }\n  __typename\n}\n\nfragment vehicle on Vehicle {\n  body_type\n  color\n  id\n  license_plate\n  make\n  state: enum_state\n  short_state_name: state\n  state_name\n  __typename\n}\n"}
spa_create_session={"operationName":"createParking","variables":{"minutes":720,"apply_wallet_credit":true,"location_id":50,"parking_time_type":"SESSION","parking_lots":[{"vehicles":[{"state":"DISTRICT_OF_COLUMBIA","license_plate":"U733U"}]}],"save_payment_method":true,"source":"WEB","partner_product_prices":[],"card_id":314000,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
spa_create_reservation={"operationName":"createParking","variables":{"starts_at":1678969800,"expires_at":1679056200,"apply_wallet_credit":true,"location_id":891,"parking_time_type":"RESERVATION","parking_lots":[{"vehicles":[{"state":"ALABAMA","license_plate":"01MUD"}]}],"save_payment_method":false,"source":"WEB","partner_product_prices":[],"card_id":314460,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
spa_create_subscription={"operationName":"createParking","variables":{"parking_time_rate_id":57,"starts_at":1679029200,"payment_method_name":"","apply_wallet_credit":true,"location_id":50,"parking_time_type":"SUBSCRIPTION","parking_lots":[{"vehicles":[{"state":"ALABAMA","license_plate":"A221K"},{"state":"ALABAMA","license_plate":"A22K6"},{"state":"ALABAMA","license_plate":"R059G"}]}],"save_payment_method":true,"source":"WEB","partner_product_prices":[],"card_id":314567,"payment_method_type":"CARD"},"query":"mutation createParking($source: Source!, $parking_time_type: ParkingEntity!, $location_id: Int!, $minutes: Int, $starts_at: Float, $expires_at: Float, $parking_time_rate_id: Int, $parking_lots: [ParkingLotInput!], $rate_group_id: Int, $apply_wallet_credit: Boolean!, $promo_code: String, $payment_method_type: PaymentMethodEntity, $payment_method_name: String, $save_payment_method: Boolean!, $card_id: Int, $bank_account_id: Int, $token: String, $floor_space_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $provider: String, $external_id: String) {\n  create_parking(source: $source, parking_time_type: $parking_time_type, location_id: $location_id, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, parking_time_rate_id: $parking_time_rate_id, parking_lots: $parking_lots, rate_group_id: $rate_group_id, apply_wallet_credit: $apply_wallet_credit, promo_code: $promo_code, payment_method_type: $payment_method_type, save_payment_method: $save_payment_method, card_id: $card_id, bank_account_id: $bank_account_id, token: $token, payment_method_name: $payment_method_name, floor_space_id: $floor_space_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, provider: $provider, external_id: $external_id) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  floor_space {\n    title\n    __typename\n  }\n  __typename\n}\n"}
