#Create Parking
createParking_PromoCode = {"operationName":"createParking","variables":{"minutes":60,"promo_code":"PROMO100","apply_wallet_credit":false,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"CBA","state":"ILLINOIS"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}
getLocationData = {"operationName":"getLocationPageData","variables":{"name":"P9800","sources":["TEXTPAY"]},"query":"query getLocationPageData($name: String!, $sources: [RateBotSources!]) {\n  location(slug: $name, non_parking: false, archived: false, competitor: false) {\n    id\n    name\n    friendly_name\n    textpay_steps_count\n    address\n    stateInfo: state_info {\n      ...stateInfo\n      __typename\n    }\n    kind\n    latitude\n    longitude\n    cruise\n    dead_rate\n    demo\n    message\n    promo_code_purchase_required\n    promo_code_prompt\n    blackouts(sessions_blocked: true, kind: ACTIVE) {\n      sessions_blocked\n      message\n      message_as_html\n      __typename\n    }\n    property_name\n    reservation_instructions\n    session_terms_of_purchase_link\n    allows_durations\n    allow_rate_groups_for_parking\n    allow_subscriptions\n    meta_description\n    meta_title\n    show_monthly_parking_box\n    monthly_parking_url\n    apply_promo_code_on_text_pay_rate_screen\n    license_plate_purchase_required\n    messageMultiply: message_multiply\n    vehicleInfoHint: vehicle_information_hint\n    parkHereButtonText: park_here_button_text\n    market {\n      id\n      slug\n      tzinfo_name\n      __typename\n    }\n    features: location_features {\n      id\n      title\n      icon {\n        url\n        __typename\n      }\n      description_as_html\n      display_as_button\n      __typename\n    }\n    color_theme {\n      ...LocationColorTheme\n      __typename\n    }\n    logo {\n      url\n      __typename\n    }\n    rate_bots(archived: false, types: [VEHICLE_WITHOUT_LICENSE_PLATE], sources: $sources, parking_types: [SESSION]) {\n      value\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment LocationColorTheme on ColorTheme {\n  id\n  content_color\n  text_color\n  __typename\n}\n\nfragment stateInfo on StateInfo {\n  abbreviation\n  enum\n  name\n  description\n  __typename\n}\n"}
createParking_Card = {"operationName":"createParking","variables":{"minutes":240,"apply_wallet_credit":true,"location_id":101,"parking_time_type":"SESSION","save_payment_method":false,"payment_method_type":"CARD","source":"TEXTPAY","token":"tok_0MSGHgOwVONrPVnvYQMWOz8F","partner_product_prices":[],"parking_lots":[{"vehicles":[{"license_plate":"GAB","state":"LOUISIANA"}]}]},"query":"mutation createParking($parking_time_type: ParkingEntity!, $parking_time_rate_id: Int, $save_payment_method: Boolean!, $location_id: Int!, $promo_code: String, $minutes: Int, $starts_at: Float, $expires_at: Float, $apply_wallet_credit: Boolean!, $card_id: Int, $payment_method_type: PaymentMethodEntity, $source: Source!, $token: String, $rate_group_id: Int, $partner_product_prices: [PartnerProductPriceArgument!], $receiver_email: String, $receiver_phone: String, $parking_lots: [ParkingLotInput!], $peek_travel_transactions: [PeekTravelTransactionInput!]) {\n  create_parking(parking_time_type: $parking_time_type, parking_time_rate_id: $parking_time_rate_id, save_payment_method: $save_payment_method, location_id: $location_id, promo_code: $promo_code, source: $source, minutes: $minutes, starts_at: $starts_at, expires_at: $expires_at, apply_wallet_credit: $apply_wallet_credit, card_id: $card_id, payment_method_type: $payment_method_type, token: $token, rate_group_id: $rate_group_id, partner_product_prices: $partner_product_prices, receiver_email: $receiver_email, receiver_phone: $receiver_phone, parking_lots: $parking_lots, peek_travel_transactions: $peek_travel_transactions) {\n    ...parking\n    __typename\n  }\n}\n\nfragment parking on Parking {\n  discount_amount\n  order_number_id\n  order_total\n  order_total_without_discount\n  promo_code\n  rate_name\n  last_payment {\n    revenue_amount\n    rate_name\n    partner_products {\n      id\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n"}